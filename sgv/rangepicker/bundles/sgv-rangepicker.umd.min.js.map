{"version":3,"sources":["ng://@sgv/rangepicker/lib/defaults.service.ts","ng://@sgv/rangepicker/lib/rangepicker.directive.ts","ng://@sgv/rangepicker/lib/calendar/calendar.component.ts","ng://@sgv/rangepicker/lib/presets.ts","ng://@sgv/rangepicker/lib/rangepicker/rangepicker.component.ts","ng://@sgv/rangepicker/lib/translations.ts","ng://@sgv/rangepicker/lib/translate.pipe.ts","ng://@sgv/rangepicker/lib/rangepicker.module.ts"],"names":["SgvRangepickerDefaultsService","InjectionToken","moment","moment_","SgvRangepickerDirective","elemRef","defaults","this","windowClick","bind","prototype","ngAfterViewInit","_this","processChange","nativeElement","value","sgvRangepicker","init","sub","datesChanged","subscribe","period","start","Number","end","format","window","addEventListener","ngOnDestroy","unsubscribe","removeEventListener","onclick","e","stopPropagation","show","onInput","event","target","dates","split","isValid","valueOf","hide","Directive","args","selector","ElementRef","Inject","Input","HostListener","SgvCalendarComponent","locale","headings","ngOnInit","monthIndex","month","year","side","decMonth","events","on","direction","incMonth","getMonthTitle","str","charAt","toUpperCase","slice","navigate","send","select","day","isCurrentMonth","date","onHover","isSelected","isSame","isBetween","hovered","hoveredDate","firstMonday","startOf","weeks","buildCalendar","done","clone","push","days","buildWeek","add","i","name","substring","number","isToday","Date","Component","template","LOCALE_ID","presets","endOf","code","subtract","SgvRangepickerComponent","tab","chunkSize","Math","ceil","length","EventEmitter","topics","topic","listener","info","forEach","visible","p","counter","emit","onClick","setPeriod","getPresetValueByCode","key","find","Output","translations","PRESETS","en","ru","DATE_INTERVAL","TODAY","YESTERDAY","DAY_BEFORE_YESTERDAY","CURRENT_WEEK","CURRENT_MONTH","CURRENT_QUARTER","CURRENT_YEAR","PAST_WEEK","PAST_MONTH","PAST_YEAR","LAST_15_MIN","LAST_30_MIN","LAST_HOUR","LAST_4_HOURS","LAST_12_HOURS","LAST_24_HOURS","LAST_7_DAYS","LAST_30_DAYS","LAST_60_DAYS","LAST_QUARTER","LAST_6_MONTHS","LAST_YEAR","LAST_2_YEARS","SgvTranslatePipe","transform","Pipe","SgvRangepickerModule","forRoot","config","ngModule","providers","provide","useValue","Object","assign","color","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\r\nimport { RangepickerConfig } from './types';\r\n\r\nexport const SgvRangepickerDefaultsService = new InjectionToken<RangepickerConfig>('SgvRangepickerDefaults');\r\n","/**\n * Rangepicker directive for input elements\n */\n\nimport { Directive, Input, ElementRef, OnInit, HostListener, AfterViewInit, OnDestroy, Inject } from '@angular/core';\nimport { SgvRangepickerComponent } from './rangepicker/rangepicker.component';\nimport * as moment_ from 'moment';\nimport { CalendarPeriod } from './types';\nimport { Subscription } from 'rxjs';\nconst moment = moment_;\nimport { SgvRangepickerDefaultsService } from './defaults.service';\n\n@Directive({\n\tselector: '[sgvRangepicker]'\n})\nexport class SgvRangepickerDirective implements AfterViewInit, OnDestroy {\n\n\tprivate sub: Subscription;\n\n\t@Input()\n\tprivate sgvRangepicker: SgvRangepickerComponent;\n\n\tconstructor(\n\t\tprivate elemRef: ElementRef,\n\t\t@Inject(SgvRangepickerDefaultsService) private defaults\n\t) {\n\t\tthis.windowClick = this.windowClick.bind(this);\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.processChange(this.elemRef.nativeElement.value);\n\t\tthis.sgvRangepicker.init();\n\n\t\tthis.sub = this.sgvRangepicker.datesChanged.subscribe((period: CalendarPeriod) => {\n\t\t\tconst start = Number(period.start);\n\t\t\tconst end = Number(period.end);\n\t\t\tthis.elemRef.nativeElement.value = moment(start).format(this.defaults.format) + ' - ' + moment(end).format(this.defaults.format);\n\t\t});\n\n\t\twindow.addEventListener('click', this.windowClick);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.sub.unsubscribe();\n\t\twindow.removeEventListener('click', this.windowClick);\n\t}\n\n\t/**\n\t * Show picker\n\t */\n\t@HostListener('click', ['$event'])\n\tpublic onclick(e): void {\n\t\te.stopPropagation();\n\t\tthis.sgvRangepicker.show();\n\t}\n\n\t/**\n\t * Pick dates on input changes\n\t * @param event - input event\n\t */\n\t@HostListener('input', ['$event'])\n\tpublic onInput(event): void {\n\t\tconst value = event.target.value;\n\t\tthis.processChange(value);\n\t}\n\n\t/**\n\t * Process changes of input element, set rangepicker model\n\t * @param value - input string\n\t */\n\tprivate processChange(value: string): void {\n\t\tlet valid: boolean;\n\n\t\tif (!value) {\n\t\t\tvalid = true;\n\t\t} else {\n\t\t\tconst dates = value.split(' - ');\n\n\t\t\tconst start = moment(dates[0], this.defaults.format);\n\t\t\tconst end =  moment(dates[1], this.defaults.format);\n\n\t\t\tvalid = start.isValid() && end.isValid() && start.valueOf() <= end.valueOf();\n\n\t\t\tif (valid) {\n\t\t\t\tthis.sgvRangepicker.period = {\n\t\t\t\t\tstart: start.valueOf(),\n\t\t\t\t\tend: end.valueOf()\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tthis.sgvRangepicker.period = {};\n\t\t\t\tthis.sgvRangepicker.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate windowClick() {\n\t\tthis.sgvRangepicker.hide();\n\t}\n\n}\n","import { Component, OnInit, Input, LOCALE_ID, Inject } from '@angular/core';\r\nimport * as moment_ from 'moment';\r\nconst moment = moment_;\r\nimport { CalendarDay, CalendarPeriod, CalendarEvents } from '../types';\r\nimport { SgvRangepickerDefaultsService } from '../defaults.service';\r\n\r\n@Component({\r\n\tselector: 'sgv-calendar',\r\n\ttemplateUrl: './calendar.component.html',\r\n\tstyleUrls: ['./calendar.component.scss']\r\n})\r\nexport class SgvCalendarComponent implements OnInit {\r\n\r\n\tpublic weeks: Array<Array<CalendarDay>>;\r\n\t@Input()\r\n\tpublic side: string;\r\n\tpublic headings = ['ÐÐ½', 'ÐÑ', 'Ð¡Ñ', 'Ð§Ñ', 'ÐÑ', 'Ð¡Ð±', 'ÐÑ'];\r\n\r\n\t@Input()\r\n\tprivate period: CalendarPeriod;\r\n\t@Input()\r\n\tprivate events: CalendarEvents;\r\n\tprivate year: number;\r\n\tprivate month: moment_.Moment;\r\n\tprivate monthIndex: number;\r\n\tprivate firstMonday: moment_.Moment;\r\n\t@Input()\r\n\tprivate hoveredDate: moment_.Moment;\r\n\r\n\tconstructor(\r\n\t\t@Inject(LOCALE_ID) private locale: string,\r\n\t\t@Inject(SgvRangepickerDefaultsService) public defaults\r\n\t) {}\r\n\r\n\tpublic ngOnInit() {\r\n\r\n\t\tthis.monthIndex = moment().month();\r\n\t\tthis.year = moment().year();\r\n\r\n\t\tif (this.side === 'left') {\r\n\t\t\tthis.decMonth();\r\n\t\t}\r\n\r\n\t\tthis.init();\r\n\r\n\t\tthis.events.on('navigate', (direction: string) => {\r\n\r\n\t\t\tif (direction === 'prev') {\r\n\t\t\t\tthis.decMonth();\r\n\t\t\t} else if (direction === 'next') {\r\n\t\t\t\tthis.incMonth();\r\n\t\t\t}\r\n\r\n\t\t\tthis.init();\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getMonthTitle(): string {\r\n\t\tconst str = this.month.locale(this.locale).format('MMMM, YYYY');\r\n\t\treturn str.charAt(0).toUpperCase() + str.slice(1);\r\n\t}\r\n\r\n\tpublic navigate(direction: string): void {\r\n\t\tthis.events.send('navigate', direction);\r\n\t}\r\n\r\n\tpublic select(day: CalendarDay): void {\r\n\t\tif (day.isCurrentMonth) {\r\n\t\t\tthis.events.send('updateModel', day.date);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onHover(day: CalendarDay): void {\r\n\t\tif (day.isCurrentMonth) {\r\n\t\t\tthis.events.send('hovered', day.date);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic isSelected(date: moment_.Moment): boolean {\r\n\t\tconst start = Number(this.period.start);\r\n\t\tconst end = Number(this.period.end);\r\n\t\treturn (start && date.isSame(start, 'day')) || (end && date.isSame(end, 'day'));\r\n\t}\r\n\r\n\tpublic isBetween(date: moment_.Moment): boolean {\r\n\t\tconst start = Number(this.period.start);\r\n\t\tconst end = Number(this.period.end);\r\n\t\tconst hovered = Number(this.hoveredDate);\r\n\r\n\t\tif (start && end) {\r\n\t\t\treturn date.isBetween(start, end);\r\n\t\t}\r\n\r\n\t\tif (start && hovered) {\r\n\t\t\treturn (\r\n\t\t\t\tdate.isBetween(start, hovered) ||\r\n\t\t\t\tdate.isBetween(hovered, start) ||\r\n\t\t\t\tdate.valueOf() === hovered\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t// TODO rename ?\r\n\tprivate init() {\r\n\t\tthis.month = moment([this.year, this.monthIndex]);\r\n\t\tthis.firstMonday = moment([this.year, this.monthIndex]).startOf('isoWeek');\r\n\t\tthis.weeks = this.buildCalendar();\r\n\t}\r\n\r\n\tprivate buildCalendar(): Array<Array<CalendarDay>> {\r\n\t\tconst weeks = [];\r\n\t\tlet done = false;\r\n\t\tconst date = this.firstMonday.clone();\r\n\r\n\t\twhile (!done) {\r\n\t\t\tweeks.push({\r\n\t\t\t\tdays: this.buildWeek(date.clone())\r\n\t\t\t});\r\n\t\t\tdate.add(1, 'w');\r\n\t\t\tdone = this.monthIndex !== date.month();\r\n\t\t}\r\n\r\n\t\treturn weeks;\r\n\t}\r\n\r\n\tprivate buildWeek(date: moment_.Moment): Array<CalendarDay> {\r\n\t\tconst days: Array<CalendarDay> = [];\r\n\r\n\t\tfor (let i = 0; i < 7; i++) {\r\n\r\n\t\t\tdays.push({\r\n\t\t\t\tname: date.format('dd').substring(0, 1),\r\n\t\t\t\tnumber: date.date(),\r\n\t\t\t\tisCurrentMonth: date.month() === this.monthIndex,\r\n\t\t\t\tisToday: date.isSame(new Date(), 'day'),\r\n\t\t\t\tdate: date\r\n\t\t\t});\r\n\r\n\t\t\tdate = date.clone();\r\n\t\t\tdate.add(1, 'd');\r\n\t\t}\r\n\r\n\t\treturn days;\r\n\t}\r\n\r\n\tprivate incMonth(): void {\r\n\t\tthis.monthIndex++;\r\n\t\tif (this.monthIndex === 12) {\r\n\t\t\tthis.monthIndex = 0;\r\n\t\t\tthis.year++;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate decMonth(): void {\r\n\t\tthis.monthIndex--;\r\n\t\tif (this.monthIndex === -1) {\r\n\t\t\tthis.monthIndex = 11;\r\n\t\t\tthis.year--;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import * as moment_ from 'moment';\r\nconst moment = moment_;\r\n\r\nexport const presets = [{\r\n\tstart: moment().startOf('day'),\r\n\tend: moment().endOf('day'),\r\n\tcode: 'TODAY'\r\n},\r\n{\r\n\tstart: moment().subtract(1, 'day').startOf('day'),\r\n\tend: moment().subtract(1, 'day').endOf('day'),\r\n\tcode: 'YESTERDAY'\r\n},\r\n{\r\n\tstart: moment().subtract(2, 'day').startOf('day'),\r\n\tend: moment().subtract(2, 'day').endOf('day'),\r\n\tcode: 'DAY_BEFORE_YESTERDAY'\r\n},\r\n{\r\n\tstart: moment().startOf('isoWeek').startOf('day'),\r\n\tend: moment().endOf('day'),\r\n\tcode: 'CURRENT_WEEK'\r\n},\r\n{\r\n\tstart: moment().startOf('month'),\r\n\tend: moment().endOf('day'),\r\n\tcode: 'CURRENT_MONTH'\r\n},\r\n{\r\n\tstart: moment().startOf('quarter'),\r\n\tend: moment().endOf('day'),\r\n\tcode: 'CURRENT_QUARTER'\r\n},\r\n{\r\n\tstart: moment().startOf('year'),\r\n\tend: moment().endOf('day'),\r\n\tcode: 'CURRENT_YEAR'\r\n},\r\n{\r\n\tstart: moment().subtract(1, 'w').startOf('isoWeek'),\r\n\tend: moment().subtract(1, 'w').endOf('isoWeek'),\r\n\tcode: 'PAST_WEEK'\r\n},\r\n{\r\n\tstart: moment().subtract(1, 'M').startOf('month'),\r\n\tend: moment().subtract(1, 'M').endOf('month'),\r\n\tcode: 'PAST_MONTH'\r\n},\r\n{\r\n\tstart: moment().subtract(1, 'y').startOf('year'),\r\n\tend: moment().subtract(1, 'y').endOf('year'),\r\n\tcode: 'PAST_YEAR'\r\n},\r\n{\r\n\tstart: moment().subtract(15, 'm'),\r\n\tend: moment(),\r\n\tcode: 'LAST_15_MIN'\r\n},\r\n{\r\n\tstart: moment().subtract(30, 'm'),\r\n\tend: moment(),\r\n\tcode: 'LAST_30_MIN'\r\n},\r\n{\r\n\tstart: moment().subtract(1, 'h'),\r\n\tend: moment(),\r\n\tcode: 'LAST_HOUR'\r\n},\r\n{\r\n\tstart: moment().subtract(4, 'h'),\r\n\tend: moment(),\r\n\tcode: 'LAST_4_HOURS'\r\n},\r\n{\r\n\tstart: moment().subtract(12, 'h'),\r\n\tend: moment(),\r\n\tcode: 'LAST_12_HOURS'\r\n},\r\n{\r\n\tstart: moment().subtract(1, 'd'),\r\n\tend: moment(),\r\n\tcode: 'LAST_24_HOURS'\r\n},\r\n{\r\n\tstart: moment().subtract(7, 'd').startOf('day'),\r\n\tend: moment().endOf('day'),\r\n\tcode: 'LAST_7_DAYS'\r\n},\r\n{\r\n\tstart: moment().subtract(30, 'd').startOf('day'),\r\n\tend: moment().endOf('day'),\r\n\tcode: 'LAST_30_DAYS'\r\n},\r\n{\r\n\tstart: moment().subtract(60, 'd').startOf('day'),\r\n\tend: moment().endOf('day'),\r\n\tcode: 'LAST_60_DAYS'\r\n},\r\n{\r\n\tstart: moment().subtract(3, 'M').startOf('day'),\r\n\tend: moment().endOf('day'),\r\n\tcode: 'LAST_QUARTER'\r\n},\r\n{\r\n\tstart: moment().subtract(6, 'M').startOf('day'),\r\n\tend: moment().endOf('day'),\r\n\tcode: 'LAST_6_MONTHS'\r\n},\r\n{\r\n\tstart: moment().subtract(1, 'y').startOf('day'),\r\n\tend: moment().endOf('day'),\r\n\tcode: 'LAST_YEAR'\r\n},\r\n{\r\n\tstart: moment().subtract(2, 'y').startOf('day'),\r\n\tend: moment().endOf('day'),\r\n\tcode: 'LAST_2_YEARS'\r\n}];\r\n","import { Component, OnInit, Input, HostListener, Output, Inject } from '@angular/core';\r\nimport * as moment_ from 'moment';\r\nconst moment = moment_;\r\nimport { CalendarDay, CalendarPeriod, CalendarEvents, RangepickerPreset } from '../types';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { presets } from '../presets';\r\nimport { SgvRangepickerDefaultsService } from '../defaults.service';\r\n\r\n@Component({\r\n\tselector: 'sgv-rangepicker',\r\n\ttemplateUrl: './rangepicker.component.html',\r\n\tstyleUrls: ['./rangepicker.component.scss']\r\n})\r\nexport class SgvRangepickerComponent {\r\n\r\n\tpublic period: CalendarPeriod;\r\n\tpublic hoveredDate: moment_.Moment;\r\n\tpublic presets: Array<RangepickerPreset> = presets;\r\n\tpublic tab = 1;\r\n\tpublic chunkSize = Math.ceil(this.presets.length / 2);\r\n\r\n\t@Output()\r\n\tpublic datesChanged: EventEmitter<CalendarPeriod> = new EventEmitter();\r\n\r\n\t/**\r\n\t * Event bus\r\n\t * TODO - ref to observables\r\n\t */\r\n\tpublic events = {\r\n\t\ttopics: {},\r\n\t\ton(topic, listener) {\r\n\r\n\t\t\tif (!this.topics[topic]) {\r\n\t\t\t\tthis.topics[topic] = [];\r\n\t\t\t}\r\n\r\n\t\t\tthis.topics[topic].push(listener);\r\n\t\t},\r\n\r\n\t\tsend(topic, info) {\r\n\r\n\t\t\tif (!this.topics[topic]) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.topics[topic].forEach(function (listener) {\r\n\t\t\t\tlistener(info);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tpublic visible = false;\r\n\r\n\tconstructor(\r\n\t\t@Inject(SgvRangepickerDefaultsService) public defaults\r\n\t) {}\r\n\r\n\tpublic show() {\r\n\t\tthis.visible = true;\r\n\t}\r\n\r\n\tpublic hide() {\r\n\t\tthis.visible = false;\r\n\t\tthis.presets.forEach((p) => p.hovered = false);\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize rangepicker\r\n\t */\r\n\tpublic init(): void {\r\n\r\n\t\tlet counter = 0;\r\n\r\n\t\tthis.events.on('updateModel', (date: moment_.Moment) => {\r\n\t\t\tif (counter === 0) {\r\n\t\t\t\t// pick first time\r\n\t\t\t\tthis.period.start = date.valueOf();\r\n\t\t\t\tthis.period.end = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (counter === 1) {\r\n\t\t\t\t// pick second time\r\n\t\t\t\tif (date.valueOf() < this.period.start.valueOf()) {\r\n\t\t\t\t\tthis.period.end = moment(this.period.start).endOf('day').valueOf();\r\n\t\t\t\t\tthis.period.start = date.valueOf();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.period.end = date.endOf('day').valueOf();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.period.start && this.period.end) {\r\n\t\t\t\tthis.hide();\r\n\t\t\t\tthis.datesChanged.emit(this.period);\r\n\t\t\t}\r\n\r\n\t\t\tcounter++;\r\n\r\n\t\t\tif (counter === 2) {\r\n\t\t\t\tcounter = 0;\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\tthis.events.on('hovered', (date: moment_.Moment) => {\r\n\t\t\tthis.hoveredDate = date;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Prevent bubbling to input\r\n\t */\r\n\t@HostListener('click', ['$event'])\r\n\tpublic onClick(e) {\r\n\t\te.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Set period from presets\r\n\t */\r\n\tpublic setPeriod(code: string): void {\r\n\t\tthis.period.start = this.getPresetValueByCode(code, 'start');\r\n\t\tthis.period.end = this.getPresetValueByCode(code, 'end');\r\n\t\tthis.hide();\r\n\t\tthis.datesChanged.emit(this.period);\r\n\t}\r\n\r\n\t/**\r\n\t * Get date in ms from preset\r\n\t * @param code - preset code\r\n\t * @param key - end or start\r\n\t */\r\n\tprivate getPresetValueByCode(code: string, key: 'start' | 'end'): number  {\r\n\t\treturn this.presets.find(p => p.code === code)[key].valueOf();\r\n\t}\r\n}\r\n","export const translations = {\r\n\t'PRESETS': {\r\n\t\t'en': 'Presets',\r\n\t\t'ru': 'ÐÑÐµÐ´ÑÑÑÐ°Ð½Ð¾Ð²Ð»ÐµÐ½Ð½ÑÐµ'\r\n\t},\r\n\t'DATE_INTERVAL': {\r\n\t\t'en': 'Date interval',\r\n\t\t'ru': 'ÐÐ½ÑÐµÑÐ²Ð°Ð» Ð´Ð°Ñ'\r\n\t},\r\n\t'TODAY': {\r\n\t\t'en': 'Today',\r\n\t\t'ru': 'Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ'\r\n\t},\r\n\t'YESTERDAY': {\r\n\t\t'en': 'Yesterday',\r\n\t\t'ru': 'ÐÑÐµÑÐ°'\r\n\t},\r\n\t'DAY_BEFORE_YESTERDAY': {\r\n\t\t'en': 'Day before yesterday',\r\n\t\t'ru': 'ÐÐ¾Ð·Ð°Ð²ÑÐµÑÐ°'\r\n\t},\r\n\t'CURRENT_WEEK': {\r\n\t\t'en': 'Current week',\r\n\t\t'ru': 'Ð¢ÐµÐºÑÑÐ°Ñ Ð½ÐµÐ´ÐµÐ»Ñ'\r\n\t},\r\n\t'CURRENT_MONTH': {\r\n\t\t'en': 'Current month',\r\n\t\t'ru': 'Ð¢ÐµÐºÑÑÐ¸Ð¹ Ð¼ÐµÑÑÑ'\r\n\t},\r\n\t'CURRENT_QUARTER': {\r\n\t\t'en': 'Current quarter',\r\n\t\t'ru': 'Ð¢ÐµÐºÑÑÐ¸Ð¹ ÐºÐ²Ð°ÑÑÐ°Ð»'\r\n\t},\r\n\t'CURRENT_YEAR': {\r\n\t\t'en': 'Current year',\r\n\t\t'ru': 'Ð¢ÐµÐºÑÑÐ¸Ð¹ Ð³Ð¾Ð´'\r\n\t},\r\n\t'PAST_WEEK': {\r\n\t\t'en': 'Past week',\r\n\t\t'ru': 'ÐÑÐµÐ´ÑÐ´ÑÑÐ°Ñ Ð½ÐµÐ´ÐµÐ»Ñ'\r\n\t},\r\n\t'PAST_MONTH': {\r\n\t\t'en': 'Past month',\r\n\t\t'ru': 'ÐÑÐµÐ´ÑÐ´ÑÑÐ¸Ð¹ Ð¼ÐµÑÑÑ'\r\n\t},\r\n\t'PAST_YEAR': {\r\n\t\t'en': 'Past year',\r\n\t\t'ru': 'ÐÑÐµÐ´ÑÐ´ÑÑÐ¸Ð¹ Ð³Ð¾Ð´'\r\n\t},\r\n\t'LAST_15_MIN': {\r\n\t\t'en': 'Last 15 minutes',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 15 Ð¼Ð¸Ð½ÑÑ'\r\n\t},\r\n\t'LAST_30_MIN': {\r\n\t\t'en': 'Last 30 minutes',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 30 Ð¼Ð¸Ð½ÑÑ'\r\n\t},\r\n\t'LAST_HOUR': {\r\n\t\t'en': 'Last hour',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ð¹ ÑÐ°Ñ'\r\n\t},\r\n\t'LAST_4_HOURS': {\r\n\t\t'en': 'Last 4 hours',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 4 ÑÐ°ÑÐ°'\r\n\t},\r\n\t'LAST_12_HOURS': {\r\n\t\t'en': 'Last 12 hours',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 12 ÑÐ°ÑÐ¾Ð²'\r\n\t},\r\n\t'LAST_24_HOURS': {\r\n\t\t'en': 'Last 24 hours',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 24 ÑÐ°ÑÐ°'\r\n\t},\r\n\t'LAST_7_DAYS': {\r\n\t\t'en': 'Last 7 days',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 7 Ð´Ð½ÐµÐ¹'\r\n\t},\r\n\t'LAST_30_DAYS': {\r\n\t\t'en': 'Last 30 days',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 30 Ð´Ð½ÐµÐ¹'\r\n\t},\r\n\t'LAST_60_DAYS': {\r\n\t\t'en': 'Last 60 days',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 60 Ð´Ð½ÐµÐ¹'\r\n\t},\r\n\t'LAST_QUARTER': {\r\n\t\t'en': 'Last quarter',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ð¹ ÐºÐ²Ð°ÑÑÐ°Ð»'\r\n\t},\r\n\t'LAST_6_MONTHS': {\r\n\t\t'en': 'Last 6 months',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 6 Ð¼ÐµÑÑÑÐµÐ²'\r\n\t},\r\n\t'LAST_YEAR': {\r\n\t\t'en': 'Last year',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ð¹ 1 Ð³Ð¾Ð´'\r\n\t},\r\n\t'LAST_2_YEARS': {\r\n\t\t'en': 'Last 2 years',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 2 Ð³Ð¾Ð´Ð°'\r\n\t}\r\n};\r\n","\r\nimport { PipeTransform, Pipe, Inject, LOCALE_ID } from '@angular/core';\r\nimport { translations } from './translations';\r\n\r\n@Pipe({\r\n\tname: 'translate'\r\n})\r\nexport class SgvTranslatePipe implements PipeTransform {\r\n\r\n\tconstructor(\r\n\t\t@Inject(LOCALE_ID) private locale: string\r\n\t) { }\r\n\r\n\ttransform(value: string): string {\r\n\t\treturn translations[value][this.locale] || value;\r\n\t}\r\n}\r\n","import { NgModule, LOCALE_ID, ModuleWithProviders } from '@angular/core';\nimport { SgvRangepickerDirective } from './rangepicker.directive';\nimport { SgvCalendarComponent } from './calendar/calendar.component';\nimport { SgvRangepickerComponent } from './rangepicker/rangepicker.component';\nimport { CommonModule } from '@angular/common';\nimport { SgvTranslatePipe } from './translate.pipe';\nimport { RangepickerConfig } from './types';\nimport { SgvRangepickerDefaultsService } from './defaults.service';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSgvRangepickerDirective,\n\t\tSgvCalendarComponent,\n\t\tSgvRangepickerComponent,\n\t\tSgvTranslatePipe\n\t],\n\texports: [\n\t\tSgvRangepickerDirective,\n\t\tSgvRangepickerComponent\n\t]\n})\nexport class SgvRangepickerModule {\n\tstatic forRoot(config: RangepickerConfig = {}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: SgvRangepickerModule,\n\t\t\tproviders: [\n\t\t\t\t{ provide: LOCALE_ID, useValue: 'en' },\n\t\t\t\t{\n\t\t\t\t\tprovide: SgvRangepickerDefaultsService,\n\t\t\t\t\tuseValue: Object.assign({\n\t\t\t\t\t\tcolor: '#3f51b5',\n\t\t\t\t\t\tformat: 'DD.MM.YYYY'\n\t\t\t\t\t}, config)\n\t\t\t\t}\n\n\t\t\t]\n\t\t};\n\t}\n}\n"]}