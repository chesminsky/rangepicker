/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as moment_ from 'moment';
/** @type {?} */
const moment = moment_;
/** @type {?} */
export const presets = [{
        start: moment().startOf('day'),
        end: moment().endOf('day'),
        code: 'TODAY'
    },
    {
        start: moment().subtract(1, 'day').startOf('day'),
        end: moment().subtract(1, 'day').endOf('day'),
        code: 'YESTERDAY'
    },
    {
        start: moment().subtract(2, 'day').startOf('day'),
        end: moment().subtract(2, 'day').endOf('day'),
        code: 'DAY_BEFORE_YESTERDAY'
    },
    {
        start: moment().startOf('isoWeek').startOf('day'),
        end: moment().endOf('day'),
        code: 'CURRENT_WEEK'
    },
    {
        start: moment().startOf('month'),
        end: moment().endOf('day'),
        code: 'CURRENT_MONTH'
    },
    {
        start: moment().startOf('quarter'),
        end: moment().endOf('day'),
        code: 'CURRENT_QUARTER'
    },
    {
        start: moment().startOf('year'),
        end: moment().endOf('day'),
        code: 'CURRENT_YEAR'
    },
    {
        start: moment().subtract(1, 'w').startOf('isoWeek'),
        end: moment().subtract(1, 'w').endOf('isoWeek'),
        code: 'PAST_WEEK'
    },
    {
        start: moment().subtract(1, 'M').startOf('month'),
        end: moment().subtract(1, 'M').endOf('month'),
        code: 'PAST_MONTH'
    },
    {
        start: moment().subtract(1, 'y').startOf('year'),
        end: moment().subtract(1, 'y').endOf('year'),
        code: 'PAST_YEAR'
    },
    {
        start: moment().subtract(15, 'm'),
        end: moment(),
        code: 'LAST_15_MIN'
    },
    {
        start: moment().subtract(30, 'm'),
        end: moment(),
        code: 'LAST_30_MIN'
    },
    {
        start: moment().subtract(1, 'h'),
        end: moment(),
        code: 'LAST_HOUR'
    },
    {
        start: moment().subtract(4, 'h'),
        end: moment(),
        code: 'LAST_4_HOURS'
    },
    {
        start: moment().subtract(12, 'h'),
        end: moment(),
        code: 'LAST_12_HOURS'
    },
    {
        start: moment().subtract(1, 'd'),
        end: moment(),
        code: 'LAST_24_HOURS'
    },
    {
        start: moment().subtract(7, 'd').startOf('day'),
        end: moment().endOf('day'),
        code: 'LAST_7_DAYS'
    },
    {
        start: moment().subtract(30, 'd').startOf('day'),
        end: moment().endOf('day'),
        code: 'LAST_30_DAYS'
    },
    {
        start: moment().subtract(60, 'd').startOf('day'),
        end: moment().endOf('day'),
        code: 'LAST_60_DAYS'
    },
    {
        start: moment().subtract(3, 'M').startOf('day'),
        end: moment().endOf('day'),
        code: 'LAST_QUARTER'
    },
    {
        start: moment().subtract(6, 'M').startOf('day'),
        end: moment().endOf('day'),
        code: 'LAST_6_MONTHS'
    },
    {
        start: moment().subtract(1, 'y').startOf('day'),
        end: moment().endOf('day'),
        code: 'LAST_YEAR'
    },
    {
        start: moment().subtract(2, 'y').startOf('day'),
        end: moment().endOf('day'),
        code: 'LAST_2_YEARS'
    }];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2V0cy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzZ3YvcmFuZ2VwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvcHJlc2V0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxLQUFLLE9BQU8sTUFBTSxRQUFRLENBQUM7O01BQzVCLE1BQU0sR0FBRyxPQUFPOztBQUV0QixNQUFNLE9BQU8sT0FBTyxHQUFHLENBQUM7UUFDdkIsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFDOUIsR0FBRyxFQUFFLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDMUIsSUFBSSxFQUFFLE9BQU87S0FDYjtJQUNEO1FBQ0MsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztRQUNqRCxHQUFHLEVBQUUsTUFBTSxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO1FBQzdDLElBQUksRUFBRSxXQUFXO0tBQ2pCO0lBQ0Q7UUFDQyxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQ2pELEdBQUcsRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDN0MsSUFBSSxFQUFFLHNCQUFzQjtLQUM1QjtJQUNEO1FBQ0MsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQ2pELEdBQUcsRUFBRSxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO1FBQzFCLElBQUksRUFBRSxjQUFjO0tBQ3BCO0lBQ0Q7UUFDQyxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUNoQyxHQUFHLEVBQUUsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQztRQUMxQixJQUFJLEVBQUUsZUFBZTtLQUNyQjtJQUNEO1FBQ0MsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUM7UUFDbEMsR0FBRyxFQUFFLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDMUIsSUFBSSxFQUFFLGlCQUFpQjtLQUN2QjtJQUNEO1FBQ0MsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFDL0IsR0FBRyxFQUFFLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDMUIsSUFBSSxFQUFFLGNBQWM7S0FDcEI7SUFDRDtRQUNDLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUM7UUFDbkQsR0FBRyxFQUFFLE1BQU0sRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQztRQUMvQyxJQUFJLEVBQUUsV0FBVztLQUNqQjtJQUNEO1FBQ0MsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUNqRCxHQUFHLEVBQUUsTUFBTSxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDO1FBQzdDLElBQUksRUFBRSxZQUFZO0tBQ2xCO0lBQ0Q7UUFDQyxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO1FBQ2hELEdBQUcsRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFDNUMsSUFBSSxFQUFFLFdBQVc7S0FDakI7SUFDRDtRQUNDLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQztRQUNqQyxHQUFHLEVBQUUsTUFBTSxFQUFFO1FBQ2IsSUFBSSxFQUFFLGFBQWE7S0FDbkI7SUFDRDtRQUNDLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQztRQUNqQyxHQUFHLEVBQUUsTUFBTSxFQUFFO1FBQ2IsSUFBSSxFQUFFLGFBQWE7S0FDbkI7SUFDRDtRQUNDLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQztRQUNoQyxHQUFHLEVBQUUsTUFBTSxFQUFFO1FBQ2IsSUFBSSxFQUFFLFdBQVc7S0FDakI7SUFDRDtRQUNDLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQztRQUNoQyxHQUFHLEVBQUUsTUFBTSxFQUFFO1FBQ2IsSUFBSSxFQUFFLGNBQWM7S0FDcEI7SUFDRDtRQUNDLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQztRQUNqQyxHQUFHLEVBQUUsTUFBTSxFQUFFO1FBQ2IsSUFBSSxFQUFFLGVBQWU7S0FDckI7SUFDRDtRQUNDLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQztRQUNoQyxHQUFHLEVBQUUsTUFBTSxFQUFFO1FBQ2IsSUFBSSxFQUFFLGVBQWU7S0FDckI7SUFDRDtRQUNDLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFDL0MsR0FBRyxFQUFFLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDMUIsSUFBSSxFQUFFLGFBQWE7S0FDbkI7SUFDRDtRQUNDLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFDaEQsR0FBRyxFQUFFLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDMUIsSUFBSSxFQUFFLGNBQWM7S0FDcEI7SUFDRDtRQUNDLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFDaEQsR0FBRyxFQUFFLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDMUIsSUFBSSxFQUFFLGNBQWM7S0FDcEI7SUFDRDtRQUNDLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFDL0MsR0FBRyxFQUFFLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDMUIsSUFBSSxFQUFFLGNBQWM7S0FDcEI7SUFDRDtRQUNDLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFDL0MsR0FBRyxFQUFFLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDMUIsSUFBSSxFQUFFLGVBQWU7S0FDckI7SUFDRDtRQUNDLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFDL0MsR0FBRyxFQUFFLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDMUIsSUFBSSxFQUFFLFdBQVc7S0FDakI7SUFDRDtRQUNDLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFDL0MsR0FBRyxFQUFFLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDMUIsSUFBSSxFQUFFLGNBQWM7S0FDcEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIG1vbWVudF8gZnJvbSAnbW9tZW50JztcclxuY29uc3QgbW9tZW50ID0gbW9tZW50XztcclxuXHJcbmV4cG9ydCBjb25zdCBwcmVzZXRzID0gW3tcclxuXHRzdGFydDogbW9tZW50KCkuc3RhcnRPZignZGF5JyksXHJcblx0ZW5kOiBtb21lbnQoKS5lbmRPZignZGF5JyksXHJcblx0Y29kZTogJ1RPREFZJ1xyXG59LFxyXG57XHJcblx0c3RhcnQ6IG1vbWVudCgpLnN1YnRyYWN0KDEsICdkYXknKS5zdGFydE9mKCdkYXknKSxcclxuXHRlbmQ6IG1vbWVudCgpLnN1YnRyYWN0KDEsICdkYXknKS5lbmRPZignZGF5JyksXHJcblx0Y29kZTogJ1lFU1RFUkRBWSdcclxufSxcclxue1xyXG5cdHN0YXJ0OiBtb21lbnQoKS5zdWJ0cmFjdCgyLCAnZGF5Jykuc3RhcnRPZignZGF5JyksXHJcblx0ZW5kOiBtb21lbnQoKS5zdWJ0cmFjdCgyLCAnZGF5JykuZW5kT2YoJ2RheScpLFxyXG5cdGNvZGU6ICdEQVlfQkVGT1JFX1lFU1RFUkRBWSdcclxufSxcclxue1xyXG5cdHN0YXJ0OiBtb21lbnQoKS5zdGFydE9mKCdpc29XZWVrJykuc3RhcnRPZignZGF5JyksXHJcblx0ZW5kOiBtb21lbnQoKS5lbmRPZignZGF5JyksXHJcblx0Y29kZTogJ0NVUlJFTlRfV0VFSydcclxufSxcclxue1xyXG5cdHN0YXJ0OiBtb21lbnQoKS5zdGFydE9mKCdtb250aCcpLFxyXG5cdGVuZDogbW9tZW50KCkuZW5kT2YoJ2RheScpLFxyXG5cdGNvZGU6ICdDVVJSRU5UX01PTlRIJ1xyXG59LFxyXG57XHJcblx0c3RhcnQ6IG1vbWVudCgpLnN0YXJ0T2YoJ3F1YXJ0ZXInKSxcclxuXHRlbmQ6IG1vbWVudCgpLmVuZE9mKCdkYXknKSxcclxuXHRjb2RlOiAnQ1VSUkVOVF9RVUFSVEVSJ1xyXG59LFxyXG57XHJcblx0c3RhcnQ6IG1vbWVudCgpLnN0YXJ0T2YoJ3llYXInKSxcclxuXHRlbmQ6IG1vbWVudCgpLmVuZE9mKCdkYXknKSxcclxuXHRjb2RlOiAnQ1VSUkVOVF9ZRUFSJ1xyXG59LFxyXG57XHJcblx0c3RhcnQ6IG1vbWVudCgpLnN1YnRyYWN0KDEsICd3Jykuc3RhcnRPZignaXNvV2VlaycpLFxyXG5cdGVuZDogbW9tZW50KCkuc3VidHJhY3QoMSwgJ3cnKS5lbmRPZignaXNvV2VlaycpLFxyXG5cdGNvZGU6ICdQQVNUX1dFRUsnXHJcbn0sXHJcbntcclxuXHRzdGFydDogbW9tZW50KCkuc3VidHJhY3QoMSwgJ00nKS5zdGFydE9mKCdtb250aCcpLFxyXG5cdGVuZDogbW9tZW50KCkuc3VidHJhY3QoMSwgJ00nKS5lbmRPZignbW9udGgnKSxcclxuXHRjb2RlOiAnUEFTVF9NT05USCdcclxufSxcclxue1xyXG5cdHN0YXJ0OiBtb21lbnQoKS5zdWJ0cmFjdCgxLCAneScpLnN0YXJ0T2YoJ3llYXInKSxcclxuXHRlbmQ6IG1vbWVudCgpLnN1YnRyYWN0KDEsICd5JykuZW5kT2YoJ3llYXInKSxcclxuXHRjb2RlOiAnUEFTVF9ZRUFSJ1xyXG59LFxyXG57XHJcblx0c3RhcnQ6IG1vbWVudCgpLnN1YnRyYWN0KDE1LCAnbScpLFxyXG5cdGVuZDogbW9tZW50KCksXHJcblx0Y29kZTogJ0xBU1RfMTVfTUlOJ1xyXG59LFxyXG57XHJcblx0c3RhcnQ6IG1vbWVudCgpLnN1YnRyYWN0KDMwLCAnbScpLFxyXG5cdGVuZDogbW9tZW50KCksXHJcblx0Y29kZTogJ0xBU1RfMzBfTUlOJ1xyXG59LFxyXG57XHJcblx0c3RhcnQ6IG1vbWVudCgpLnN1YnRyYWN0KDEsICdoJyksXHJcblx0ZW5kOiBtb21lbnQoKSxcclxuXHRjb2RlOiAnTEFTVF9IT1VSJ1xyXG59LFxyXG57XHJcblx0c3RhcnQ6IG1vbWVudCgpLnN1YnRyYWN0KDQsICdoJyksXHJcblx0ZW5kOiBtb21lbnQoKSxcclxuXHRjb2RlOiAnTEFTVF80X0hPVVJTJ1xyXG59LFxyXG57XHJcblx0c3RhcnQ6IG1vbWVudCgpLnN1YnRyYWN0KDEyLCAnaCcpLFxyXG5cdGVuZDogbW9tZW50KCksXHJcblx0Y29kZTogJ0xBU1RfMTJfSE9VUlMnXHJcbn0sXHJcbntcclxuXHRzdGFydDogbW9tZW50KCkuc3VidHJhY3QoMSwgJ2QnKSxcclxuXHRlbmQ6IG1vbWVudCgpLFxyXG5cdGNvZGU6ICdMQVNUXzI0X0hPVVJTJ1xyXG59LFxyXG57XHJcblx0c3RhcnQ6IG1vbWVudCgpLnN1YnRyYWN0KDcsICdkJykuc3RhcnRPZignZGF5JyksXHJcblx0ZW5kOiBtb21lbnQoKS5lbmRPZignZGF5JyksXHJcblx0Y29kZTogJ0xBU1RfN19EQVlTJ1xyXG59LFxyXG57XHJcblx0c3RhcnQ6IG1vbWVudCgpLnN1YnRyYWN0KDMwLCAnZCcpLnN0YXJ0T2YoJ2RheScpLFxyXG5cdGVuZDogbW9tZW50KCkuZW5kT2YoJ2RheScpLFxyXG5cdGNvZGU6ICdMQVNUXzMwX0RBWVMnXHJcbn0sXHJcbntcclxuXHRzdGFydDogbW9tZW50KCkuc3VidHJhY3QoNjAsICdkJykuc3RhcnRPZignZGF5JyksXHJcblx0ZW5kOiBtb21lbnQoKS5lbmRPZignZGF5JyksXHJcblx0Y29kZTogJ0xBU1RfNjBfREFZUydcclxufSxcclxue1xyXG5cdHN0YXJ0OiBtb21lbnQoKS5zdWJ0cmFjdCgzLCAnTScpLnN0YXJ0T2YoJ2RheScpLFxyXG5cdGVuZDogbW9tZW50KCkuZW5kT2YoJ2RheScpLFxyXG5cdGNvZGU6ICdMQVNUX1FVQVJURVInXHJcbn0sXHJcbntcclxuXHRzdGFydDogbW9tZW50KCkuc3VidHJhY3QoNiwgJ00nKS5zdGFydE9mKCdkYXknKSxcclxuXHRlbmQ6IG1vbWVudCgpLmVuZE9mKCdkYXknKSxcclxuXHRjb2RlOiAnTEFTVF82X01PTlRIUydcclxufSxcclxue1xyXG5cdHN0YXJ0OiBtb21lbnQoKS5zdWJ0cmFjdCgxLCAneScpLnN0YXJ0T2YoJ2RheScpLFxyXG5cdGVuZDogbW9tZW50KCkuZW5kT2YoJ2RheScpLFxyXG5cdGNvZGU6ICdMQVNUX1lFQVInXHJcbn0sXHJcbntcclxuXHRzdGFydDogbW9tZW50KCkuc3VidHJhY3QoMiwgJ3knKS5zdGFydE9mKCdkYXknKSxcclxuXHRlbmQ6IG1vbWVudCgpLmVuZE9mKCdkYXknKSxcclxuXHRjb2RlOiAnTEFTVF8yX1lFQVJTJ1xyXG59XTtcclxuIl19