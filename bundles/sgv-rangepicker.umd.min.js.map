{"version":3,"sources":["ng://@sgv/rangepicker/lib/options.ts","ng://@sgv/rangepicker/lib/defaults.ts","ng://@sgv/rangepicker/lib/rangepicker.directive.ts","ng://@sgv/rangepicker/lib/calendar/calendar.component.ts","ng://@sgv/rangepicker/lib/presets.ts","ng://@sgv/rangepicker/lib/rangepicker/rangepicker.component.ts","ng://@sgv/rangepicker/lib/translations.ts","ng://@sgv/rangepicker/lib/translate.pipe.ts","ng://@sgv/rangepicker/lib/rangepicker.module.ts"],"names":["SgvRangepickerOptions","InjectionToken","SgvRangepickerDefaultsService","options","this","Object","assign","color","format","Injectable","Inject","args","type","Optional","moment","moment_","SgvRangepickerDirective","elemRef","defaults","windowClick","bind","prototype","writeValue","value","nativeElement","registerOnChange","fn","_this","onChange","registerOnTouched","_fn","ngAfterViewInit","processChange","sgvRangepicker","init","sub","datesChanged","subscribe","period","start","Number","end","window","addEventListener","ngOnDestroy","unsubscribe","removeEventListener","onclick","e","stopPropagation","show","onInput","event","target","dates","split","isValid","valueOf","hide","Directive","selector","providers","provide","NG_VALUE_ACCESSOR","useExisting","multi","ElementRef","Input","HostListener","SgvCalendarComponent","locale","headings","ngOnInit","monthIndex","month","year","side","decMonth","events","on","direction","incMonth","getMonthTitle","str","charAt","toUpperCase","slice","navigate","send","select","day","isCurrentMonth","date","onHover","isSelected","isSame","isBetween","hovered","hoveredDate","firstMonday","startOf","weeks","buildCalendar","done","clone","push","days","buildWeek","add","i","name","substring","number","isToday","Date","Component","template","LOCALE_ID","presets","endOf","code","subtract","SgvRangepickerComponent","tab","chunkSize","Math","ceil","length","EventEmitter","topics","topic","listener","info","forEach","visible","p","counter","emit","onClick","setPeriod","getPresetValueByCode","key","find","Output","translations","PRESETS","en","ru","DATE_INTERVAL","TODAY","YESTERDAY","DAY_BEFORE_YESTERDAY","CURRENT_WEEK","CURRENT_MONTH","CURRENT_QUARTER","CURRENT_YEAR","PAST_WEEK","PAST_MONTH","PAST_YEAR","LAST_15_MIN","LAST_30_MIN","LAST_HOUR","LAST_4_HOURS","LAST_12_HOURS","LAST_24_HOURS","LAST_7_DAYS","LAST_30_DAYS","LAST_60_DAYS","LAST_QUARTER","LAST_6_MONTHS","LAST_YEAR","LAST_2_YEARS","SgvTranslatePipe","transform","Pipe","SgvRangepickerModule","NgModule","imports","CommonModule","declarations","exports","useValue"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\r\nimport { RangepickerConfig } from './types';\r\n\r\nexport const SgvRangepickerOptions = new InjectionToken<RangepickerConfig>('options');\r\n","import { Injectable, Optional, Inject } from '@angular/core';\r\nimport { SgvRangepickerOptions } from './options';\r\nimport { RangepickerConfig } from './types';\r\n\r\n@Injectable()\r\nexport class SgvRangepickerDefaultsService {\r\n\tconstructor(@Inject(SgvRangepickerOptions) @Optional() private options: RangepickerConfig) {\r\n\r\n\t\tconst defaults = {\r\n\t\t\tcolor: '#3f51b5',\r\n\t\t\tformat: 'DD.MM.YYYY'\r\n\t\t};\r\n\r\n\t\tObject.assign(this, defaults);\r\n\r\n\t\tif (options) {\r\n\t\t\tObject.assign(this, options);\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * Rangepicker directive for input elements\r\n */\r\n\r\nimport { Directive, Input, ElementRef, OnInit, HostListener, AfterViewInit, OnDestroy, Inject } from '@angular/core';\r\nimport { SgvRangepickerComponent } from './rangepicker/rangepicker.component';\r\nimport * as moment_ from 'moment';\r\nimport { CalendarPeriod } from './types';\r\nimport { Subscription } from 'rxjs';\r\nconst moment = moment_;\r\nimport { SgvRangepickerDefaultsService } from './defaults';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\n@Directive({\r\n\tselector: '[sgvRangepicker]',\r\n\tproviders: [{\r\n\t\tprovide: NG_VALUE_ACCESSOR,\r\n\t\tuseExisting: SgvRangepickerDirective,\r\n\t\tmulti: true,\r\n\t}],\r\n})\r\nexport class SgvRangepickerDirective implements AfterViewInit, OnDestroy, ControlValueAccessor {\r\n\r\n\tprivate sub: Subscription;\r\n\tonChange: any;\r\n\tvalue: string;\r\n\r\n\t@Input()\r\n\tprivate sgvRangepicker: SgvRangepickerComponent;\r\n\r\n\tconstructor(\r\n\t\tprivate elemRef: ElementRef,\r\n\t\t@Inject(SgvRangepickerDefaultsService) private defaults\r\n\t) {\r\n\t\tthis.windowClick = this.windowClick.bind(this);\r\n\t}\r\n\r\n\twriteValue(value: any): void {\r\n\t\tif (value) {\r\n\t\t\tthis.value = value;\r\n\t\t\tthis.elemRef.nativeElement.value = value;\r\n\t\t}\r\n\t}\r\n\r\n\tregisterOnChange(fn: any): void {\r\n\t\tthis.onChange = () => {\r\n\t\t\tfn(this.value);\r\n\t\t};\r\n\t}\r\n\r\n\tregisterOnTouched(_fn: any): void {\r\n\t\treturn;\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t\tthis.processChange(this.elemRef.nativeElement.value);\r\n\t\tthis.sgvRangepicker.init();\r\n\r\n\t\tthis.sub = this.sgvRangepicker.datesChanged.subscribe((period: CalendarPeriod) => {\r\n\t\t\tconst start = Number(period.start);\r\n\t\t\tconst end = Number(period.end);\r\n\t\t\tthis.writeValue(\r\n\t\t\t\tmoment(start).format(this.defaults.format) + ' - ' + moment(end).format(this.defaults.format)\r\n\t\t\t);\r\n\t\t\tthis.onChange();\r\n\t\t});\r\n\r\n\t\twindow.addEventListener('click', this.windowClick);\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.sub.unsubscribe();\r\n\t\twindow.removeEventListener('click', this.windowClick);\r\n\t}\r\n\r\n\t/**\r\n\t * Show picker\r\n\t */\r\n\t@HostListener('click', ['$event'])\r\n\tpublic onclick(e): void {\r\n\t\te.stopPropagation();\r\n\t\tthis.sgvRangepicker.show();\r\n\t}\r\n\r\n\t/**\r\n\t * Pick dates on input changes\r\n\t * @param event - input event\r\n\t */\r\n\t@HostListener('input', ['$event'])\r\n\tpublic onInput(event): void {\r\n\t\tconst value = event.target.value;\r\n\t\tthis.processChange(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Process changes of input element, set rangepicker model\r\n\t * @param value - input string\r\n\t */\r\n\tprivate processChange(value: string): void {\r\n\t\tlet valid: boolean;\r\n\r\n\t\tif (!value) {\r\n\t\t\tvalid = true;\r\n\t\t\tthis.sgvRangepicker.period = {};\r\n\t\t} else {\r\n\t\t\tconst dates = value.split(' - ');\r\n\r\n\t\t\tconst start = moment(dates[0], this.defaults.format);\r\n\t\t\tconst end =  moment(dates[1], this.defaults.format);\r\n\r\n\t\t\tvalid = start.isValid() && end.isValid() && start.valueOf() <= end.valueOf();\r\n\r\n\t\t\tif (valid) {\r\n\t\t\t\tthis.sgvRangepicker.period = {\r\n\t\t\t\t\tstart: start.valueOf(),\r\n\t\t\t\t\tend: end.valueOf()\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tthis.sgvRangepicker.period = {};\r\n\t\t\t\tthis.sgvRangepicker.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate windowClick() {\r\n\t\tthis.sgvRangepicker.hide();\r\n\t}\r\n\r\n}\r\n","import { Component, OnInit, Input, LOCALE_ID, Inject } from '@angular/core';\r\nimport * as moment_ from 'moment';\r\nconst moment = moment_;\r\nimport { CalendarDay, CalendarPeriod, CalendarEvents } from '../types';\r\nimport { SgvRangepickerDefaultsService } from '../defaults';\r\n\r\n@Component({\r\n\tselector: 'sgv-calendar',\r\n\ttemplateUrl: './calendar.component.html',\r\n\tstyleUrls: ['./calendar.component.scss']\r\n})\r\nexport class SgvCalendarComponent implements OnInit {\r\n\r\n\tpublic weeks: Array<Array<CalendarDay>>;\r\n\t@Input()\r\n\tpublic side: string;\r\n\tpublic headings = ['ÐÐ½', 'ÐÑ', 'Ð¡Ñ', 'Ð§Ñ', 'ÐÑ', 'Ð¡Ð±', 'ÐÑ'];\r\n\r\n\t@Input()\r\n\tprivate period: CalendarPeriod;\r\n\t@Input()\r\n\tprivate events: CalendarEvents;\r\n\tprivate year: number;\r\n\tprivate month: moment_.Moment;\r\n\tprivate monthIndex: number;\r\n\tprivate firstMonday: moment_.Moment;\r\n\t@Input()\r\n\tprivate hoveredDate: moment_.Moment;\r\n\r\n\tconstructor(\r\n\t\t@Inject(LOCALE_ID) private locale: string,\r\n\t\t@Inject(SgvRangepickerDefaultsService) public defaults\r\n\t) {}\r\n\r\n\tpublic ngOnInit() {\r\n\r\n\t\tthis.monthIndex = moment().month();\r\n\t\tthis.year = moment().year();\r\n\r\n\t\tif (this.side === 'left') {\r\n\t\t\tthis.decMonth();\r\n\t\t}\r\n\r\n\t\tthis.init();\r\n\r\n\t\tthis.events.on('navigate', (direction: string) => {\r\n\r\n\t\t\tif (direction === 'prev') {\r\n\t\t\t\tthis.decMonth();\r\n\t\t\t} else if (direction === 'next') {\r\n\t\t\t\tthis.incMonth();\r\n\t\t\t}\r\n\r\n\t\t\tthis.init();\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getMonthTitle(): string {\r\n\t\tconst str = this.month.locale(this.locale).format('MMMM, YYYY');\r\n\t\treturn str.charAt(0).toUpperCase() + str.slice(1);\r\n\t}\r\n\r\n\tpublic navigate(direction: string): void {\r\n\t\tthis.events.send('navigate', direction);\r\n\t}\r\n\r\n\tpublic select(day: CalendarDay): void {\r\n\t\tif (day.isCurrentMonth) {\r\n\t\t\tthis.events.send('updateModel', day.date);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onHover(day: CalendarDay): void {\r\n\t\tif (day.isCurrentMonth) {\r\n\t\t\tthis.events.send('hovered', day.date);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic isSelected(date: moment_.Moment): boolean {\r\n\t\tconst start = Number(this.period.start);\r\n\t\tconst end = Number(this.period.end);\r\n\t\treturn (start && date.isSame(start, 'day')) || (end && date.isSame(end, 'day'));\r\n\t}\r\n\r\n\tpublic isBetween(date: moment_.Moment): boolean {\r\n\t\tconst start = Number(this.period.start);\r\n\t\tconst end = Number(this.period.end);\r\n\t\tconst hovered = Number(this.hoveredDate);\r\n\r\n\t\tif (start && end) {\r\n\t\t\treturn date.isBetween(start, end);\r\n\t\t}\r\n\r\n\t\tif (start && hovered) {\r\n\t\t\treturn (\r\n\t\t\t\tdate.isBetween(start, hovered) ||\r\n\t\t\t\tdate.isBetween(hovered, start) ||\r\n\t\t\t\tdate.valueOf() === hovered\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t// TODO rename ?\r\n\tprivate init() {\r\n\t\tthis.month = moment([this.year, this.monthIndex]);\r\n\t\tthis.firstMonday = moment([this.year, this.monthIndex]).startOf('isoWeek');\r\n\t\tthis.weeks = this.buildCalendar();\r\n\t}\r\n\r\n\tprivate buildCalendar(): Array<Array<CalendarDay>> {\r\n\t\tconst weeks = [];\r\n\t\tlet done = false;\r\n\t\tconst date = this.firstMonday.clone();\r\n\r\n\t\twhile (!done) {\r\n\t\t\tweeks.push({\r\n\t\t\t\tdays: this.buildWeek(date.clone())\r\n\t\t\t});\r\n\t\t\tdate.add(1, 'w');\r\n\t\t\tdone = this.monthIndex !== date.month();\r\n\t\t}\r\n\r\n\t\treturn weeks;\r\n\t}\r\n\r\n\tprivate buildWeek(date: moment_.Moment): Array<CalendarDay> {\r\n\t\tconst days: Array<CalendarDay> = [];\r\n\r\n\t\tfor (let i = 0; i < 7; i++) {\r\n\r\n\t\t\tdays.push({\r\n\t\t\t\tname: date.format('dd').substring(0, 1),\r\n\t\t\t\tnumber: date.date(),\r\n\t\t\t\tisCurrentMonth: date.month() === this.monthIndex,\r\n\t\t\t\tisToday: date.isSame(new Date(), 'day'),\r\n\t\t\t\tdate: date\r\n\t\t\t});\r\n\r\n\t\t\tdate = date.clone();\r\n\t\t\tdate.add(1, 'd');\r\n\t\t}\r\n\r\n\t\treturn days;\r\n\t}\r\n\r\n\tprivate incMonth(): void {\r\n\t\tthis.monthIndex++;\r\n\t\tif (this.monthIndex === 12) {\r\n\t\t\tthis.monthIndex = 0;\r\n\t\t\tthis.year++;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate decMonth(): void {\r\n\t\tthis.monthIndex--;\r\n\t\tif (this.monthIndex === -1) {\r\n\t\t\tthis.monthIndex = 11;\r\n\t\t\tthis.year--;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import * as moment_ from 'moment';\r\nconst moment = moment_;\r\n\r\nexport const presets = [\r\n\t{\r\n\t\tstart: moment().startOf('day'),\r\n\t\tend: moment().endOf('day'),\r\n\t\tcode: 'TODAY'\r\n\t},\r\n\t{\r\n\t\tstart: moment().subtract(1, 'day').startOf('day'),\r\n\t\tend: moment().subtract(1, 'day').endOf('day'),\r\n\t\tcode: 'YESTERDAY'\r\n\t},\r\n\t{\r\n\t\tstart: moment().subtract(2, 'day').startOf('day'),\r\n\t\tend: moment().subtract(2, 'day').endOf('day'),\r\n\t\tcode: 'DAY_BEFORE_YESTERDAY'\r\n\t},\r\n\t{\r\n\t\tstart: moment().startOf('isoWeek').startOf('day'),\r\n\t\tend: moment().endOf('day'),\r\n\t\tcode: 'CURRENT_WEEK'\r\n\t},\r\n\t{\r\n\t\tstart: moment().startOf('month'),\r\n\t\tend: moment().endOf('day'),\r\n\t\tcode: 'CURRENT_MONTH'\r\n\t},\r\n\t{\r\n\t\tstart: moment().startOf('quarter'),\r\n\t\tend: moment().endOf('day'),\r\n\t\tcode: 'CURRENT_QUARTER'\r\n\t},\r\n\t{\r\n\t\tstart: moment().startOf('year'),\r\n\t\tend: moment().endOf('day'),\r\n\t\tcode: 'CURRENT_YEAR'\r\n\t},\r\n\t{\r\n\t\tstart: moment().subtract(1, 'w').startOf('isoWeek'),\r\n\t\tend: moment().subtract(1, 'w').endOf('isoWeek'),\r\n\t\tcode: 'PAST_WEEK'\r\n\t},\r\n\t{\r\n\t\tstart: moment().subtract(1, 'M').startOf('month'),\r\n\t\tend: moment().subtract(1, 'M').endOf('month'),\r\n\t\tcode: 'PAST_MONTH'\r\n\t},\r\n\t{\r\n\t\tstart: moment().subtract(1, 'y').startOf('year'),\r\n\t\tend: moment().subtract(1, 'y').endOf('year'),\r\n\t\tcode: 'PAST_YEAR'\r\n\t},\r\n\t/*\r\n\t{\r\n\t\tstart: moment().subtract(15, 'm'),\r\n\t\tend: moment(),\r\n\t\tcode: 'LAST_15_MIN'\r\n\t},\r\n\t{\r\n\t\tstart: moment().subtract(30, 'm'),\r\n\t\tend: moment(),\r\n\t\tcode: 'LAST_30_MIN'\r\n\t},\r\n\t{\r\n\t\tstart: moment().subtract(1, 'h'),\r\n\t\tend: moment(),\r\n\t\tcode: 'LAST_HOUR'\r\n\t},\r\n\t{\r\n\t\tstart: moment().subtract(4, 'h'),\r\n\t\tend: moment(),\r\n\t\tcode: 'LAST_4_HOURS'\r\n\t},\r\n\t{\r\n\t\tstart: moment().subtract(12, 'h'),\r\n\t\tend: moment(),\r\n\t\tcode: 'LAST_12_HOURS'\r\n\t},\r\n\t{\r\n\t\tstart: moment().subtract(1, 'd'),\r\n\t\tend: moment(),\r\n\t\tcode: 'LAST_24_HOURS'\r\n\t},\r\n\t*/\r\n\t{\r\n\t\tstart: moment().subtract(7, 'd').startOf('day'),\r\n\t\tend: moment().endOf('day'),\r\n\t\tcode: 'LAST_7_DAYS'\r\n\t},\r\n\t{\r\n\t\tstart: moment().subtract(30, 'd').startOf('day'),\r\n\t\tend: moment().endOf('day'),\r\n\t\tcode: 'LAST_30_DAYS'\r\n\t},\r\n\t{\r\n\t\tstart: moment().subtract(60, 'd').startOf('day'),\r\n\t\tend: moment().endOf('day'),\r\n\t\tcode: 'LAST_60_DAYS'\r\n\t},\r\n\t{\r\n\t\tstart: moment().subtract(3, 'M').startOf('day'),\r\n\t\tend: moment().endOf('day'),\r\n\t\tcode: 'LAST_QUARTER'\r\n\t},\r\n\t{\r\n\t\tstart: moment().subtract(6, 'M').startOf('day'),\r\n\t\tend: moment().endOf('day'),\r\n\t\tcode: 'LAST_6_MONTHS'\r\n\t},\r\n\t{\r\n\t\tstart: moment().subtract(1, 'y').startOf('day'),\r\n\t\tend: moment().endOf('day'),\r\n\t\tcode: 'LAST_YEAR'\r\n\t},\r\n\t{\r\n\t\tstart: moment().subtract(2, 'y').startOf('day'),\r\n\t\tend: moment().endOf('day'),\r\n\t\tcode: 'LAST_2_YEARS'\r\n\t}\r\n];\r\n","import { Component, OnInit, Input, HostListener, Output, Inject } from '@angular/core';\r\nimport * as moment_ from 'moment';\r\nconst moment = moment_;\r\nimport { CalendarDay, CalendarPeriod, CalendarEvents, RangepickerPreset } from '../types';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { presets } from '../presets';\r\nimport { SgvRangepickerDefaultsService } from '../defaults';\r\n\r\n@Component({\r\n\tselector: 'sgv-rangepicker',\r\n\ttemplateUrl: './rangepicker.component.html',\r\n\tstyleUrls: ['./rangepicker.component.scss']\r\n})\r\nexport class SgvRangepickerComponent {\r\n\r\n\tpublic period: CalendarPeriod;\r\n\tpublic hoveredDate: moment_.Moment;\r\n\tpublic presets: Array<RangepickerPreset> = presets;\r\n\tpublic tab = 2;\r\n\tpublic chunkSize = Math.ceil(this.presets.length / 2);\r\n\r\n\t@Output()\r\n\tpublic datesChanged: EventEmitter<CalendarPeriod> = new EventEmitter();\r\n\r\n\t/**\r\n\t * Event bus\r\n\t * TODO - ref to observables\r\n\t */\r\n\tpublic events = {\r\n\t\ttopics: {},\r\n\t\ton(topic, listener) {\r\n\r\n\t\t\tif (!this.topics[topic]) {\r\n\t\t\t\tthis.topics[topic] = [];\r\n\t\t\t}\r\n\r\n\t\t\tthis.topics[topic].push(listener);\r\n\t\t},\r\n\r\n\t\tsend(topic, info) {\r\n\r\n\t\t\tif (!this.topics[topic]) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.topics[topic].forEach(function (listener) {\r\n\t\t\t\tlistener(info);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tpublic visible = false;\r\n\r\n\tconstructor(\r\n\t\t@Inject(SgvRangepickerDefaultsService) public defaults\r\n\t) {}\r\n\r\n\tpublic show() {\r\n\t\tthis.visible = true;\r\n\t}\r\n\r\n\tpublic hide() {\r\n\t\tthis.visible = false;\r\n\t\tthis.presets.forEach((p) => p.hovered = false);\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize rangepicker\r\n\t */\r\n\tpublic init(): void {\r\n\r\n\t\tlet counter = 0;\r\n\r\n\t\tthis.events.on('updateModel', (date: moment_.Moment) => {\r\n\t\t\tif (counter === 0) {\r\n\t\t\t\t// pick first time\r\n\t\t\t\tthis.period.start = date.valueOf();\r\n\t\t\t\tthis.period.end = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (counter === 1) {\r\n\t\t\t\t// pick second time\r\n\t\t\t\tif (date.valueOf() < this.period.start.valueOf()) {\r\n\t\t\t\t\tthis.period.end = moment(this.period.start).endOf('day').valueOf();\r\n\t\t\t\t\tthis.period.start = date.valueOf();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.period.end = date.endOf('day').valueOf();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.period.start && this.period.end) {\r\n\t\t\t\tthis.hide();\r\n\t\t\t\tthis.datesChanged.emit(this.period);\r\n\t\t\t}\r\n\r\n\t\t\tcounter++;\r\n\r\n\t\t\tif (counter === 2) {\r\n\t\t\t\tcounter = 0;\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\tthis.events.on('hovered', (date: moment_.Moment) => {\r\n\t\t\tthis.hoveredDate = date;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Prevent bubbling to input\r\n\t */\r\n\t@HostListener('click', ['$event'])\r\n\tpublic onClick(e) {\r\n\t\te.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Set period from presets\r\n\t */\r\n\tpublic setPeriod(code: string): void {\r\n\t\tthis.period.start = this.getPresetValueByCode(code, 'start');\r\n\t\tthis.period.end = this.getPresetValueByCode(code, 'end');\r\n\t\tthis.hide();\r\n\t\tthis.datesChanged.emit(this.period);\r\n\t}\r\n\r\n\t/**\r\n\t * Get date in ms from preset\r\n\t * @param code - preset code\r\n\t * @param key - end or start\r\n\t */\r\n\tprivate getPresetValueByCode(code: string, key: 'start' | 'end'): number  {\r\n\t\treturn this.presets.find(p => p.code === code)[key].valueOf();\r\n\t}\r\n}\r\n","export const translations = {\r\n\t'PRESETS': {\r\n\t\t'en': 'Presets',\r\n\t\t'ru': 'ÐÑÐµÐ´ÑÑÑÐ°Ð½Ð¾Ð²Ð»ÐµÐ½Ð½ÑÐµ'\r\n\t},\r\n\t'DATE_INTERVAL': {\r\n\t\t'en': 'Date interval',\r\n\t\t'ru': 'ÐÐ½ÑÐµÑÐ²Ð°Ð» Ð´Ð°Ñ'\r\n\t},\r\n\t'TODAY': {\r\n\t\t'en': 'Today',\r\n\t\t'ru': 'Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ'\r\n\t},\r\n\t'YESTERDAY': {\r\n\t\t'en': 'Yesterday',\r\n\t\t'ru': 'ÐÑÐµÑÐ°'\r\n\t},\r\n\t'DAY_BEFORE_YESTERDAY': {\r\n\t\t'en': 'Day before yesterday',\r\n\t\t'ru': 'ÐÐ¾Ð·Ð°Ð²ÑÐµÑÐ°'\r\n\t},\r\n\t'CURRENT_WEEK': {\r\n\t\t'en': 'Current week',\r\n\t\t'ru': 'Ð¢ÐµÐºÑÑÐ°Ñ Ð½ÐµÐ´ÐµÐ»Ñ'\r\n\t},\r\n\t'CURRENT_MONTH': {\r\n\t\t'en': 'Current month',\r\n\t\t'ru': 'Ð¢ÐµÐºÑÑÐ¸Ð¹ Ð¼ÐµÑÑÑ'\r\n\t},\r\n\t'CURRENT_QUARTER': {\r\n\t\t'en': 'Current quarter',\r\n\t\t'ru': 'Ð¢ÐµÐºÑÑÐ¸Ð¹ ÐºÐ²Ð°ÑÑÐ°Ð»'\r\n\t},\r\n\t'CURRENT_YEAR': {\r\n\t\t'en': 'Current year',\r\n\t\t'ru': 'Ð¢ÐµÐºÑÑÐ¸Ð¹ Ð³Ð¾Ð´'\r\n\t},\r\n\t'PAST_WEEK': {\r\n\t\t'en': 'Past week',\r\n\t\t'ru': 'ÐÑÐµÐ´ÑÐ´ÑÑÐ°Ñ Ð½ÐµÐ´ÐµÐ»Ñ'\r\n\t},\r\n\t'PAST_MONTH': {\r\n\t\t'en': 'Past month',\r\n\t\t'ru': 'ÐÑÐµÐ´ÑÐ´ÑÑÐ¸Ð¹ Ð¼ÐµÑÑÑ'\r\n\t},\r\n\t'PAST_YEAR': {\r\n\t\t'en': 'Past year',\r\n\t\t'ru': 'ÐÑÐµÐ´ÑÐ´ÑÑÐ¸Ð¹ Ð³Ð¾Ð´'\r\n\t},\r\n\t'LAST_15_MIN': {\r\n\t\t'en': 'Last 15 minutes',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 15 Ð¼Ð¸Ð½ÑÑ'\r\n\t},\r\n\t'LAST_30_MIN': {\r\n\t\t'en': 'Last 30 minutes',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 30 Ð¼Ð¸Ð½ÑÑ'\r\n\t},\r\n\t'LAST_HOUR': {\r\n\t\t'en': 'Last hour',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ð¹ ÑÐ°Ñ'\r\n\t},\r\n\t'LAST_4_HOURS': {\r\n\t\t'en': 'Last 4 hours',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 4 ÑÐ°ÑÐ°'\r\n\t},\r\n\t'LAST_12_HOURS': {\r\n\t\t'en': 'Last 12 hours',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 12 ÑÐ°ÑÐ¾Ð²'\r\n\t},\r\n\t'LAST_24_HOURS': {\r\n\t\t'en': 'Last 24 hours',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 24 ÑÐ°ÑÐ°'\r\n\t},\r\n\t'LAST_7_DAYS': {\r\n\t\t'en': 'Last 7 days',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 7 Ð´Ð½ÐµÐ¹'\r\n\t},\r\n\t'LAST_30_DAYS': {\r\n\t\t'en': 'Last 30 days',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 30 Ð´Ð½ÐµÐ¹'\r\n\t},\r\n\t'LAST_60_DAYS': {\r\n\t\t'en': 'Last 60 days',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 60 Ð´Ð½ÐµÐ¹'\r\n\t},\r\n\t'LAST_QUARTER': {\r\n\t\t'en': 'Last quarter',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ð¹ ÐºÐ²Ð°ÑÑÐ°Ð»'\r\n\t},\r\n\t'LAST_6_MONTHS': {\r\n\t\t'en': 'Last 6 months',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 6 Ð¼ÐµÑÑÑÐµÐ²'\r\n\t},\r\n\t'LAST_YEAR': {\r\n\t\t'en': 'Last year',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ð¹ 1 Ð³Ð¾Ð´'\r\n\t},\r\n\t'LAST_2_YEARS': {\r\n\t\t'en': 'Last 2 years',\r\n\t\t'ru': 'ÐÐ¾ÑÐ»ÐµÐ´Ð½Ð¸Ðµ 2 Ð³Ð¾Ð´Ð°'\r\n\t}\r\n};\r\n","\r\nimport { PipeTransform, Pipe, Inject, LOCALE_ID } from '@angular/core';\r\nimport { translations } from './translations';\r\n\r\n@Pipe({\r\n\tname: 'translate'\r\n})\r\nexport class SgvTranslatePipe implements PipeTransform {\r\n\r\n\tconstructor(\r\n\t\t@Inject(LOCALE_ID) private locale: string\r\n\t) { }\r\n\r\n\ttransform(value: string): string {\r\n\t\treturn translations[value][this.locale] || value;\r\n\t}\r\n}\r\n","import { NgModule, LOCALE_ID, ModuleWithProviders } from '@angular/core';\r\nimport { SgvRangepickerDirective } from './rangepicker.directive';\r\nimport { SgvCalendarComponent } from './calendar/calendar.component';\r\nimport { SgvRangepickerComponent } from './rangepicker/rangepicker.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SgvTranslatePipe } from './translate.pipe';\r\nimport { SgvRangepickerDefaultsService } from './defaults';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tSgvRangepickerDirective,\r\n\t\tSgvCalendarComponent,\r\n\t\tSgvRangepickerComponent,\r\n\t\tSgvTranslatePipe\r\n\t],\r\n\texports: [\r\n\t\tSgvRangepickerDirective,\r\n\t\tSgvRangepickerComponent\r\n\t],\r\n\tproviders: [\r\n\t\tSgvRangepickerDefaultsService,\r\n\t\t{ provide: LOCALE_ID, useValue: 'en' }\r\n\t]\r\n})\r\nexport class SgvRangepickerModule {}\r\n"]}